{"version":3,"sources":["pages/home/index.tsx","index.tsx"],"names":["Home","blobUrlsRef","useRef","handleDelete","useCallback","file","blobUrls","current","blobUrl","name","URL","revokeObjectURL","handleChange","files","a","createObjectURL","Magick","magickFile","console","log","useEffect","Object","keys","forEach","fileName","Container","className","clearOnUnmount","filesLimit","onChange","onDelete","inputProps","multiple","accept","ReactDOM","render","document","getElementById"],"mappings":"kRAoDeA,MA9Cf,WACE,IAAMC,EAAcC,iBAA+B,IAC7CC,EAAeC,uBAAY,SAACC,GAChC,IAAMC,EAAWL,EAAYM,QACvBC,EAAUF,EAASD,EAAKI,MAC1BD,IACFE,IAAIC,gBAAgBH,UACbF,EAASD,EAAKI,SAEtB,IACGG,EAAeR,sBAAW,uCAAC,WAAOS,GAAP,qBAAAC,EAAA,uEAChBD,EADgB,GACxBR,EADwB,6DAGzBG,EAAUE,IAAIK,gBAAgBV,GACpCF,EAAaE,GACbJ,EAAYM,QAAQF,EAAKI,MAAQD,EALF,SAMNQ,iBAAsBR,EAASH,EAAKI,MAN9B,OAMzBQ,EANyB,OAO/BC,QAAQC,IAAIF,GAPmB,4CAAD,sDAQ7B,CAACd,IAUJ,OATAiB,qBAAU,WACR,IAAMd,EAAWL,EAAYM,QAC7B,OAAO,WACLc,OAAOC,KAAKhB,GAAUiB,SAAQ,SAACC,GAC7B,IAAMhB,EAAUF,EAASkB,GACzBd,IAAIC,gBAAgBH,SAGvB,IAED,cAACiB,EAAA,EAAD,CAAWC,UAAU,OAArB,SACE,sBAAMA,UAAU,YAAhB,SACE,cAAC,IAAD,CACEC,gBAAc,EACdC,WAAY,EACZC,SAAUjB,EACVkB,SAAU3B,EACV4B,WAAY,CACVC,UAAU,EACVC,OAAQ,kB,OCvCpBC,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.cba538ce.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react';\nimport * as Magick from 'wasm-imagemagick';\nimport Container from '@material-ui/core/Container';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport './style.scss';\n\nfunction Home() {\n  const blobUrlsRef = useRef<Record<string, string>>({});\n  const handleDelete = useCallback((file: File) => {\n    const blobUrls = blobUrlsRef.current;\n    const blobUrl = blobUrls[file.name];\n    if (blobUrl) {\n      URL.revokeObjectURL(blobUrl);\n      delete blobUrls[file.name];\n    };\n  }, []);\n  const handleChange = useCallback(async (files: File[]) => {\n    const [file] = files;\n    if (!file) return;\n    const blobUrl = URL.createObjectURL(file);\n    handleDelete(file);\n    blobUrlsRef.current[file.name] = blobUrl;\n    const magickFile = await Magick.buildInputFile(blobUrl, file.name);\n    console.log(magickFile);\n  }, [handleDelete]);\n  useEffect(() => {\n    const blobUrls = blobUrlsRef.current;\n    return () => {\n      Object.keys(blobUrls).forEach((fileName) => {\n        const blobUrl = blobUrls[fileName];\n        URL.revokeObjectURL(blobUrl);\n      });\n    };\n  }, []);\n  return (\n    <Container className=\"home\">\n      <main className=\"home-body\">\n        <DropzoneArea\n          clearOnUnmount\n          filesLimit={1}\n          onChange={handleChange}\n          onDelete={handleDelete}\n          inputProps={{\n            multiple: false,\n            accept: 'image/*',\n          }}\n      />\n      </main>\n    </Container>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './pages/home';\nimport './index.scss';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n"],"sourceRoot":""}